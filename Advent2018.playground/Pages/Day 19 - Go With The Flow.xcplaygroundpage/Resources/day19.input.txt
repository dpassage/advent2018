#ip 4
addi 4 16 4  #  0: jump to 17
seti 1 5 3   #  1: set r3 to 1
seti 1 9 1   #  2: set r1 to 1
mulr 3 1 2   #  3: set r2 to r3 * r1
eqrr 2 5 2   #  4: set r2 to 1 if r2 == r5
addr 2 4 4   #  5: jump ahead by r2 + 1
addi 4 1 4   #  6: jump to 10
addr 3 0 0   #  7: set r0 to r3 + r0
addi 1 1 1   #  8: increment r1
gtrr 1 5 2   #  9: set r2 to 1 if r1 > r5
addr 4 2 4   # 10: jump ahead by r2 + 1
seti 2 9 4   # 11: jump to 3
addi 3 1 3   # 12: increment r3
gtrr 3 5 2   # 13: set r2 to 1 if r3 > r5
addr 2 4 4   # 14: jump ahead by r2 + 1
seti 1 8 4   # 15: jump to 2
mulr 4 4 4   # 16: jump to 256 i.e. halt
addi 5 2 5   # 17: add 2 to r5           // start of initialization
mulr 5 5 5   # 18: set r5 to r5 * r5
mulr 4 5 5   # 19: set r5 to r5 * 19
muli 5 11 5  # 20: set r5 to r5 * 11
addi 2 4 2   # 21: add 4 to r2
mulr 2 4 2   # 22: set r2 to r2 * 22
addi 2 5 2   # 23: add 5 to r2
addr 5 2 5   # 24: set r5 to r5 + r2    // r2 is 93; r5 is 929
addr 4 0 4   # 25: jump ahead by r0 + 1 // this is different between part1 and part2; part1 goes back to 1
seti 0 9 4   # 26: jump to 1
setr 4 2 2   # 27: set r2 to 27
mulr 2 4 2   # 28: multiply r2 by 28   // r2 is 756
addr 4 2 2   # 29: add 29 to r2        // r2 is 785
mulr 4 2 2   # 30: multiply r2 by 30   // r2 is 23,550
muli 2 14 2  # 31: multiply r2 by 14   // r2 is 329,700
mulr 2 4 2   # 32: multiply r2 by 32   // r2 is 10,550,400
addr 5 2 5   # 33: set r5 to r5 + r2   // r5 is 10,551,329
seti 0 0 0   # 34: set r0 to 0
seti 0 8 4   # 35: jump to 1
